{"attributes": {"fullName": "qx.bom.element2.Style", "packageName": "qx.bom.element2", "isStatic": true, "type": "class", "name": "Style"}, "type": "class", "children": [{"attributes": {"text": "<p>Rewritten support for applying style properties.</p>\n\n<p>Differences to old implementation:</p>\n\n<ul>\n<li>Better/Faster at supporting vendor prefixes.</li>\n<li>No special IE handling for computed values (pixel values)</li>\n<li>No stringify support (compile())</li>\n<li>No sub-modules: cursor, overflow, box sizing, etc.</li>\n<li>No dependencies</li>\n</ul>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "get"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of style property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "computed"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the computed value should be returned</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the current property value on the given element.</p>\n\n<p>Attention:</p>\n\n<p>In Internet Explorer there is no 100% possibility to have access to the computed value.\nWe fallback to the only supported thing: cascaded properties. These are the actual value\nof the property as applied &#8211; non interpreted. This means that units are not translated\nto pixels etc. like which is normally the case in computed properties.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns the value of the given style property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "property"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Standard (or pre standard) name e.g. &#8220;opacity&#8221;, &#8220;transform&#8221;, ...</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Detects a name of a <span class=\"caps\">CSS</span> property in the current engine and returns it.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Vendor property name e.g. &#8220;WebkitTransform&#8221;</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "set"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to modify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Style name or Map of styles/values to apply</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Style value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets a new style property. If you want to modify\nmultiple styles at once it&#8217;s a lot faster to use a map\nas second argument.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns the class for further modifications</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}]}]}