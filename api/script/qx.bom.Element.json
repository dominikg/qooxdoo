{"attributes": {"fullName": "qx.bom.Element", "packageName": "qx.bom", "isStatic": true, "type": "class", "name": "Element"}, "type": "class", "children": [{"attributes": {"text": "<p>Basic class for all kind of element modification</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "allowCreationWithMarkup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "", "name": "win"}, "type": "param", "children": [{"attributes": {"text": "<p>Window to check for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Detects if the <span class=\"caps\">DOM</span> support a <code>document.createElement</code> call with a \n<code>String</code> as markup like:</p>\n\n<pre class=\"javascript\">\ndocument.createElement(\"<input type=\"radio\" name=\"RADIOTEST\" value=\"Second Choice\" />\");\n</pre>\n\n<p>Element creation with markup is not standard compatible with Document Object Model (Core) Level 1, but\nInternet Explorer supports it. With an exception that IE9 in IE9 standard mode is standard compatible and\ndoesn&#8217;t support element creation with markup.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> if the DOM supports it, <code>false</code> otherwise."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "clone"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to clone</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "events"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether events should be copied as well</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clone given <span class=\"caps\">DOM</span> element. May optionally clone all attached\nevents (recursively) as well.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The copied element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "create"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Tag name of the element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>Map of attributes to apply</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "win"}, "type": "param", "children": [{"attributes": {"text": "<p>Window to create the element for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates an <span class=\"caps\">DOM</span> element.</p>\n\n<p>Attributes may be given directly with this call. This is critical\nfor some attributes e.g. name, type, ... in many clients.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The created element node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "empty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to clean</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all content from the given element</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>empty string (new <span class=\"caps\">HTML</span> content)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getHelperElement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "", "name": "win"}, "type": "param", "children": [{"attributes": {"text": "<p>Window to create the element for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates and returns an <span class=\"caps\">DOM</span> helper element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The created element node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}]}]}